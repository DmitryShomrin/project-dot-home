name: pi-hole

services:
  pihole:
    container_name: pihole
    image: pihole/pihole:{{ docker_compose_templates_pi_hole_image_version }}
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    environment:
      TZ: 'Europe/Stockholm'
      WEBPASSWORD: {{ docker_compose_templates_pi_hole_web_password }}
      PIHOLE_DNS_: {{ docker_compose_templates_pi_hole_upstream_dns_servers }}
    #  FTLCONF_LOCAL_IPV4: {{ ansible_default_ipv4.address }}
      DNSSEC: true
    volumes:
      - "{{ docker_compose_templates_pi_hole_data_dir }}/etc-pihole:/etc/pihole"
      - "{{ docker_compose_templates_pi_hole_data_dir }}/etc-dnsmasq.d:/etc/dnsmasq.d"
    networks:
      - services
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`pihole.s5n.dev`)"
      - "traefik.http.routers.pihole.entrypoints=https"
      - "traefik.http.routers.pihole.tls=true"
      - "traefik.http.routers.pihole.tls.certresolver=cloudflare"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      - "traefik.docker.network=services"


{% if docker_compose_templates_cloudflared %}
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:{{ docker_compose_templates_cloudflared_image_version }}
    environment:
      TZ: 'Europe/Stockholm'
      TUNNEL_DNS_UPSTREAM: {{ docker_compose_templates_cloudflared_upstream_dns_servers }}
      TUNNEL_DNS_PORT: {{ docker_compose_templates_cloudflared_dns_port }}
      TUNNEL_DNS_ADDRESS: {{ docker_compose_templates_cloudflared_dns_address }}
    command: proxy-dns
    restart: unless-stopped
    networks:
      - services
{% endif %}

networks:
  services:
    name: services
    external: true
