name: paperless-ngx

services:
  broker:
    image: {{ docker_compose_templates_paperless_broker_image }}
    user: 1000:1000
    restart: unless-stopped
    volumes:
      - {{ docker_compose_templates_paperless_redis_data_dir }}:/data
    networks:
      - services

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:{{ docker_compose_templates_paperless_image_version }}
    restart: unless-stopped
    depends_on:
      - broker
      - gotenberg
      - tika
    volumes:
      - {{ docker_compose_templates_paperless_data_dir }}:/usr/src/paperless/data
      - {{ docker_compose_templates_paperless_media_dir }}:/usr/src/paperless/media
      - {{ docker_compose_templates_paperless_export_dir }}:/usr/src/paperless/export
      - {{ docker_compose_templates_paperless_consume_dir }}:/usr/src/paperless/consume
    environment:
      PAPERLESS_URL: https://paperless.s5n.dev
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBENGINE: postgresql
      PAPERLESS_DBHOST: postgresql
      PAPERLESS_DBNAME: paperless
      PAPERLESS_DBUSER: paperless
      PAPERLESS_DBPASS: {{ docker_compose_templates_paperless_database_password }}
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
      PAPERLESS_ADMIN_USER: {{ docker_compose_templates_paperless_admin_user }}
      PAPERLESS_ADMIN_PASSWORD: {{ docker_compose_templates_paperless_admin_password }}
      PAPERLESS_OCR_LANGUAGE: swe+eng+rus
      PAPERLESS_OCR_LANGUAGES: "swe rus"
      PAPERLESS_TIME_ZONE: Europe/Stockholm
    networks:
      - services
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.paperless.rule=Host(`paperless.s5n.dev`)"
      - "traefik.http.routers.paperless.entrypoints=https"
      - "traefik.http.routers.paperless.tls=true"
      - "traefik.http.routers.paperless.tls.certresolver=cloudflare"
      - "traefik.http.services.paperless.loadbalancer.server.port=8000"
      - "traefik.docker.network=services"

  gotenberg:
    image: docker.io/gotenberg/gotenberg:{{ docker_compose_templates_paperless_gotenberg_image_version }}
    restart: unless-stopped
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    networks:
      - services

  tika:
    image: docker.io/apache/tika:{{ docker_compose_templates_paperless_tika_image_version }}
    restart: unless-stopped
    networks:
      - services

networks:
  services:
    name: services
    external: true
