name: monitoring

services:
    prometheus:
        container_name: prometheus
        image: prom/prometheus:{{ docker_compose_templates_prometheus_image_version }}
        volumes:
          - {{ docker_compose_templates_prometheus_data_dir }}:/prometheus
          - {{ docker_compose_templates_prometheus_config_dir }}:/etc/prometheus
        command:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/usr/share/prometheus/console_libraries'
          - '--web.console.templates=/usr/share/prometheus/consoles'
          - '--storage.tsdb.retention=180d'
          - '--web.enable-lifecycle'
        user: "1000"
        networks:
          - services
        restart: unless-stopped
        labels:
          - "traefik.enable=true"
          - "traefik.http.routers.prometheus.rule=Host(`prometheus.s5n.dev`)"
          - "traefik.http.routers.prometheus.entrypoints=https"
          - "traefik.http.routers.prometheus.tls=true"
          - "traefik.http.routers.prometheus.tls.certresolver=cloudflare"
          - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
          - "traefik.docker.network=services"

    grafana:
        image: grafana/grafana:{{ docker_compose_templates_grafana_image_version }}
        container_name: grafana
        depends_on:
          - prometheus
        user: "1000"
        volumes:
          - {{ docker_compose_templates_grafana_data_dir }}:/var/lib/grafana
          - {{ docker_compose_templates_grafana_config_dir }}:/etc/grafana/provisioning
        env_file:
          - {{ docker_compose_services_config_base_path }}/grafana/config.monitoring
        networks:
          - services
        restart: unless-stopped
        labels:
          - "traefik.enable=true"
          - "traefik.http.routers.grafana.rule=Host(`grafana.s5n.dev`)"
          - "traefik.http.routers.grafana.entrypoints=https"
          - "traefik.http.routers.grafana.tls=true"
          - "traefik.http.routers.grafana.tls.certresolver=cloudflare"
          - "traefik.http.services.grafana.loadbalancer.server.port=3000"
          - "traefik.docker.network=services"

{% if docker_compose_templates_alertmanager %}
    alertmanager:
        image: prom/alertmanager:{{ docker_compose_templates_alertmanager_image_version }}
        container_name: alertmanager
        volumes:
          - {{ docker_compose_templates_alertmanager_config_dir }}:/etc/alertmanager/
        command:
          - '--config.file=/etc/alertmanager/config.yml'
          - '--storage.path=/alertmanager'
        networks:
          - services
        restart: unless-stopped
        labels:
          - "traefik.enable=true"
          - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.s5n.dev`)"
          - "traefik.http.routers.alertmanager.entrypoints=https"
          - "traefik.http.routers.alertmanager.tls=true"
          - "traefik.http.routers.alertmanager.tls.certresolver=cloudflare"
          - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
          - "traefik.docker.network=services"
{% endif %}

networks:
  services:
    name: services
    external: true
